import { __assign, __awaiter, __generator } from "tslib";
import { toHex } from "@aws-sdk/util-hex-encoding";
export var sendMessageMiddleware = function (options) {
    return function (next) {
        return function (args) { return __awaiter(void 0, void 0, void 0, function () {
            var resp, output, hash, _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0: return [4, next(__assign({}, args))];
                    case 1:
                        resp = _c.sent();
                        output = resp.output;
                        hash = new options.md5();
                        hash.update(args.input.MessageBody || "");
                        _a = output.MD5OfMessageBody;
                        _b = toHex;
                        return [4, hash.digest()];
                    case 2:
                        if (_a !== _b.apply(void 0, [_c.sent()])) {
                            throw new Error("InvalidChecksumError");
                        }
                        return [2, resp];
                }
            });
        }); };
    };
};
export var sendMessageMiddlewareOptions = {
    step: "initialize",
    tags: ["VALIDATE_BODY_MD5"],
    name: "sendMessageMiddleware",
    override: true,
};
export var getSendMessagePlugin = function (config) { return ({
    applyToStack: function (clientStack) {
        clientStack.add(sendMessageMiddleware(config), sendMessageMiddlewareOptions);
    },
}); };
