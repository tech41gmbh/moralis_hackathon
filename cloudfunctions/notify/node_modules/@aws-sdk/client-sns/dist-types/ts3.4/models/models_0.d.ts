import { MetadataBearer as $MetadataBearer, SmithyException as __SmithyException } from "@aws-sdk/types";
export interface AddPermissionInput {
    
    TopicArn: string | undefined;
    
    Label: string | undefined;
    
    AWSAccountId: string[] | undefined;
    
    ActionName: string[] | undefined;
}
export declare namespace AddPermissionInput {
    
    const filterSensitiveLog: (obj: AddPermissionInput) => any;
}

export interface AuthorizationErrorException extends __SmithyException, $MetadataBearer {
    name: "AuthorizationErrorException";
    $fault: "client";
    message?: string;
}
export declare namespace AuthorizationErrorException {
    
    const filterSensitiveLog: (obj: AuthorizationErrorException) => any;
}

export interface InternalErrorException extends __SmithyException, $MetadataBearer {
    name: "InternalErrorException";
    $fault: "server";
    message?: string;
}
export declare namespace InternalErrorException {
    
    const filterSensitiveLog: (obj: InternalErrorException) => any;
}

export interface InvalidParameterException extends __SmithyException, $MetadataBearer {
    name: "InvalidParameterException";
    $fault: "client";
    message?: string;
}
export declare namespace InvalidParameterException {
    
    const filterSensitiveLog: (obj: InvalidParameterException) => any;
}

export interface NotFoundException extends __SmithyException, $MetadataBearer {
    name: "NotFoundException";
    $fault: "client";
    message?: string;
}
export declare namespace NotFoundException {
    
    const filterSensitiveLog: (obj: NotFoundException) => any;
}

export interface CheckIfPhoneNumberIsOptedOutInput {
    
    phoneNumber: string | undefined;
}
export declare namespace CheckIfPhoneNumberIsOptedOutInput {
    
    const filterSensitiveLog: (obj: CheckIfPhoneNumberIsOptedOutInput) => any;
}

export interface CheckIfPhoneNumberIsOptedOutResponse {
    
    isOptedOut?: boolean;
}
export declare namespace CheckIfPhoneNumberIsOptedOutResponse {
    
    const filterSensitiveLog: (obj: CheckIfPhoneNumberIsOptedOutResponse) => any;
}

export interface ThrottledException extends __SmithyException, $MetadataBearer {
    name: "ThrottledException";
    $fault: "client";
    
    message?: string;
}
export declare namespace ThrottledException {
    
    const filterSensitiveLog: (obj: ThrottledException) => any;
}

export interface ConfirmSubscriptionInput {
    
    TopicArn: string | undefined;
    
    Token: string | undefined;
    
    AuthenticateOnUnsubscribe?: string;
}
export declare namespace ConfirmSubscriptionInput {
    
    const filterSensitiveLog: (obj: ConfirmSubscriptionInput) => any;
}

export interface ConfirmSubscriptionResponse {
    
    SubscriptionArn?: string;
}
export declare namespace ConfirmSubscriptionResponse {
    
    const filterSensitiveLog: (obj: ConfirmSubscriptionResponse) => any;
}

export interface FilterPolicyLimitExceededException extends __SmithyException, $MetadataBearer {
    name: "FilterPolicyLimitExceededException";
    $fault: "client";
    message?: string;
}
export declare namespace FilterPolicyLimitExceededException {
    
    const filterSensitiveLog: (obj: FilterPolicyLimitExceededException) => any;
}

export interface SubscriptionLimitExceededException extends __SmithyException, $MetadataBearer {
    name: "SubscriptionLimitExceededException";
    $fault: "client";
    message?: string;
}
export declare namespace SubscriptionLimitExceededException {
    
    const filterSensitiveLog: (obj: SubscriptionLimitExceededException) => any;
}

export interface CreatePlatformApplicationInput {
    
    Name: string | undefined;
    
    Platform: string | undefined;
    
    Attributes: {
        [key: string]: string;
    } | undefined;
}
export declare namespace CreatePlatformApplicationInput {
    
    const filterSensitiveLog: (obj: CreatePlatformApplicationInput) => any;
}

export interface CreatePlatformApplicationResponse {
    
    PlatformApplicationArn?: string;
}
export declare namespace CreatePlatformApplicationResponse {
    
    const filterSensitiveLog: (obj: CreatePlatformApplicationResponse) => any;
}

export interface CreateEndpointResponse {
    
    EndpointArn?: string;
}
export declare namespace CreateEndpointResponse {
    
    const filterSensitiveLog: (obj: CreateEndpointResponse) => any;
}

export interface CreatePlatformEndpointInput {
    
    PlatformApplicationArn: string | undefined;
    
    Token: string | undefined;
    
    CustomUserData?: string;
    
    Attributes?: {
        [key: string]: string;
    };
}
export declare namespace CreatePlatformEndpointInput {
    
    const filterSensitiveLog: (obj: CreatePlatformEndpointInput) => any;
}
export declare enum LanguageCodeString {
    de_DE = "de-DE",
    en_GB = "en-GB",
    en_US = "en-US",
    es_419 = "es-419",
    es_ES = "es-ES",
    fr_CA = "fr-CA",
    fr_FR = "fr-FR",
    it_IT = "it-IT",
    jp_JP = "ja-JP",
    kr_KR = "kr-KR",
    pt_BR = "pt-BR",
    zh_CN = "zh-CN",
    zh_TW = "zh-TW"
}
export interface CreateSMSSandboxPhoneNumberInput {
    
    PhoneNumber: string | undefined;
    
    LanguageCode?: LanguageCodeString | string;
}
export declare namespace CreateSMSSandboxPhoneNumberInput {
    
    const filterSensitiveLog: (obj: CreateSMSSandboxPhoneNumberInput) => any;
}
export interface CreateSMSSandboxPhoneNumberResult {
}
export declare namespace CreateSMSSandboxPhoneNumberResult {
    
    const filterSensitiveLog: (obj: CreateSMSSandboxPhoneNumberResult) => any;
}

export interface OptedOutException extends __SmithyException, $MetadataBearer {
    name: "OptedOutException";
    $fault: "client";
    message?: string;
}
export declare namespace OptedOutException {
    
    const filterSensitiveLog: (obj: OptedOutException) => any;
}

export interface UserErrorException extends __SmithyException, $MetadataBearer {
    name: "UserErrorException";
    $fault: "client";
    message?: string;
}
export declare namespace UserErrorException {
    
    const filterSensitiveLog: (obj: UserErrorException) => any;
}

export interface ConcurrentAccessException extends __SmithyException, $MetadataBearer {
    name: "ConcurrentAccessException";
    $fault: "client";
    message?: string;
}
export declare namespace ConcurrentAccessException {
    
    const filterSensitiveLog: (obj: ConcurrentAccessException) => any;
}

export interface Tag {
    
    Key: string | undefined;
    
    Value: string | undefined;
}
export declare namespace Tag {
    
    const filterSensitiveLog: (obj: Tag) => any;
}

export interface CreateTopicInput {
    
    Name: string | undefined;
    
    Attributes?: {
        [key: string]: string;
    };
    
    Tags?: Tag[];
}
export declare namespace CreateTopicInput {
    
    const filterSensitiveLog: (obj: CreateTopicInput) => any;
}

export interface CreateTopicResponse {
    
    TopicArn?: string;
}
export declare namespace CreateTopicResponse {
    
    const filterSensitiveLog: (obj: CreateTopicResponse) => any;
}

export interface InvalidSecurityException extends __SmithyException, $MetadataBearer {
    name: "InvalidSecurityException";
    $fault: "client";
    message?: string;
}
export declare namespace InvalidSecurityException {
    
    const filterSensitiveLog: (obj: InvalidSecurityException) => any;
}

export interface StaleTagException extends __SmithyException, $MetadataBearer {
    name: "StaleTagException";
    $fault: "client";
    message?: string;
}
export declare namespace StaleTagException {
    
    const filterSensitiveLog: (obj: StaleTagException) => any;
}

export interface TagLimitExceededException extends __SmithyException, $MetadataBearer {
    name: "TagLimitExceededException";
    $fault: "client";
    message?: string;
}
export declare namespace TagLimitExceededException {
    
    const filterSensitiveLog: (obj: TagLimitExceededException) => any;
}

export interface TagPolicyException extends __SmithyException, $MetadataBearer {
    name: "TagPolicyException";
    $fault: "client";
    message?: string;
}
export declare namespace TagPolicyException {
    
    const filterSensitiveLog: (obj: TagPolicyException) => any;
}

export interface TopicLimitExceededException extends __SmithyException, $MetadataBearer {
    name: "TopicLimitExceededException";
    $fault: "client";
    message?: string;
}
export declare namespace TopicLimitExceededException {
    
    const filterSensitiveLog: (obj: TopicLimitExceededException) => any;
}

export interface DeleteEndpointInput {
    
    EndpointArn: string | undefined;
}
export declare namespace DeleteEndpointInput {
    
    const filterSensitiveLog: (obj: DeleteEndpointInput) => any;
}

export interface DeletePlatformApplicationInput {
    
    PlatformApplicationArn: string | undefined;
}
export declare namespace DeletePlatformApplicationInput {
    
    const filterSensitiveLog: (obj: DeletePlatformApplicationInput) => any;
}
export interface DeleteSMSSandboxPhoneNumberInput {
    
    PhoneNumber: string | undefined;
}
export declare namespace DeleteSMSSandboxPhoneNumberInput {
    
    const filterSensitiveLog: (obj: DeleteSMSSandboxPhoneNumberInput) => any;
}
export interface DeleteSMSSandboxPhoneNumberResult {
}
export declare namespace DeleteSMSSandboxPhoneNumberResult {
    
    const filterSensitiveLog: (obj: DeleteSMSSandboxPhoneNumberResult) => any;
}

export interface ResourceNotFoundException extends __SmithyException, $MetadataBearer {
    name: "ResourceNotFoundException";
    $fault: "client";
    message?: string;
}
export declare namespace ResourceNotFoundException {
    
    const filterSensitiveLog: (obj: ResourceNotFoundException) => any;
}
export interface DeleteTopicInput {
    
    TopicArn: string | undefined;
}
export declare namespace DeleteTopicInput {
    
    const filterSensitiveLog: (obj: DeleteTopicInput) => any;
}

export interface GetEndpointAttributesInput {
    
    EndpointArn: string | undefined;
}
export declare namespace GetEndpointAttributesInput {
    
    const filterSensitiveLog: (obj: GetEndpointAttributesInput) => any;
}

export interface GetEndpointAttributesResponse {
    
    Attributes?: {
        [key: string]: string;
    };
}
export declare namespace GetEndpointAttributesResponse {
    
    const filterSensitiveLog: (obj: GetEndpointAttributesResponse) => any;
}

export interface GetPlatformApplicationAttributesInput {
    
    PlatformApplicationArn: string | undefined;
}
export declare namespace GetPlatformApplicationAttributesInput {
    
    const filterSensitiveLog: (obj: GetPlatformApplicationAttributesInput) => any;
}

export interface GetPlatformApplicationAttributesResponse {
    
    Attributes?: {
        [key: string]: string;
    };
}
export declare namespace GetPlatformApplicationAttributesResponse {
    
    const filterSensitiveLog: (obj: GetPlatformApplicationAttributesResponse) => any;
}

export interface GetSMSAttributesInput {
    
    attributes?: string[];
}
export declare namespace GetSMSAttributesInput {
    
    const filterSensitiveLog: (obj: GetSMSAttributesInput) => any;
}

export interface GetSMSAttributesResponse {
    
    attributes?: {
        [key: string]: string;
    };
}
export declare namespace GetSMSAttributesResponse {
    
    const filterSensitiveLog: (obj: GetSMSAttributesResponse) => any;
}
export interface GetSMSSandboxAccountStatusInput {
}
export declare namespace GetSMSSandboxAccountStatusInput {
    
    const filterSensitiveLog: (obj: GetSMSSandboxAccountStatusInput) => any;
}
export interface GetSMSSandboxAccountStatusResult {
    
    IsInSandbox: boolean | undefined;
}
export declare namespace GetSMSSandboxAccountStatusResult {
    
    const filterSensitiveLog: (obj: GetSMSSandboxAccountStatusResult) => any;
}

export interface GetSubscriptionAttributesInput {
    
    SubscriptionArn: string | undefined;
}
export declare namespace GetSubscriptionAttributesInput {
    
    const filterSensitiveLog: (obj: GetSubscriptionAttributesInput) => any;
}

export interface GetSubscriptionAttributesResponse {
    
    Attributes?: {
        [key: string]: string;
    };
}
export declare namespace GetSubscriptionAttributesResponse {
    
    const filterSensitiveLog: (obj: GetSubscriptionAttributesResponse) => any;
}

export interface GetTopicAttributesInput {
    
    TopicArn: string | undefined;
}
export declare namespace GetTopicAttributesInput {
    
    const filterSensitiveLog: (obj: GetTopicAttributesInput) => any;
}

export interface GetTopicAttributesResponse {
    
    Attributes?: {
        [key: string]: string;
    };
}
export declare namespace GetTopicAttributesResponse {
    
    const filterSensitiveLog: (obj: GetTopicAttributesResponse) => any;
}

export interface ListEndpointsByPlatformApplicationInput {
    
    PlatformApplicationArn: string | undefined;
    
    NextToken?: string;
}
export declare namespace ListEndpointsByPlatformApplicationInput {
    
    const filterSensitiveLog: (obj: ListEndpointsByPlatformApplicationInput) => any;
}

export interface Endpoint {
    
    EndpointArn?: string;
    
    Attributes?: {
        [key: string]: string;
    };
}
export declare namespace Endpoint {
    
    const filterSensitiveLog: (obj: Endpoint) => any;
}

export interface ListEndpointsByPlatformApplicationResponse {
    
    Endpoints?: Endpoint[];
    
    NextToken?: string;
}
export declare namespace ListEndpointsByPlatformApplicationResponse {
    
    const filterSensitiveLog: (obj: ListEndpointsByPlatformApplicationResponse) => any;
}
export interface ListOriginationNumbersRequest {
    
    NextToken?: string;
    
    MaxResults?: number;
}
export declare namespace ListOriginationNumbersRequest {
    
    const filterSensitiveLog: (obj: ListOriginationNumbersRequest) => any;
}
export declare enum NumberCapability {
    MMS = "MMS",
    SMS = "SMS",
    VOICE = "VOICE"
}
export declare enum RouteType {
    Premium = "Premium",
    Promotional = "Promotional",
    Transactional = "Transactional"
}

export interface PhoneNumberInformation {
    
    CreatedAt?: Date;
    
    PhoneNumber?: string;
    
    Status?: string;
    
    Iso2CountryCode?: string;
    
    RouteType?: RouteType | string;
    
    NumberCapabilities?: (NumberCapability | string)[];
}
export declare namespace PhoneNumberInformation {
    
    const filterSensitiveLog: (obj: PhoneNumberInformation) => any;
}
export interface ListOriginationNumbersResult {
    
    NextToken?: string;
    
    PhoneNumbers?: PhoneNumberInformation[];
}
export declare namespace ListOriginationNumbersResult {
    
    const filterSensitiveLog: (obj: ListOriginationNumbersResult) => any;
}

export interface ValidationException extends __SmithyException, $MetadataBearer {
    name: "ValidationException";
    $fault: "client";
    Message: string | undefined;
}
export declare namespace ValidationException {
    
    const filterSensitiveLog: (obj: ValidationException) => any;
}

export interface ListPhoneNumbersOptedOutInput {
    
    nextToken?: string;
}
export declare namespace ListPhoneNumbersOptedOutInput {
    
    const filterSensitiveLog: (obj: ListPhoneNumbersOptedOutInput) => any;
}

export interface ListPhoneNumbersOptedOutResponse {
    
    phoneNumbers?: string[];
    
    nextToken?: string;
}
export declare namespace ListPhoneNumbersOptedOutResponse {
    
    const filterSensitiveLog: (obj: ListPhoneNumbersOptedOutResponse) => any;
}

export interface ListPlatformApplicationsInput {
    
    NextToken?: string;
}
export declare namespace ListPlatformApplicationsInput {
    
    const filterSensitiveLog: (obj: ListPlatformApplicationsInput) => any;
}

export interface PlatformApplication {
    
    PlatformApplicationArn?: string;
    
    Attributes?: {
        [key: string]: string;
    };
}
export declare namespace PlatformApplication {
    
    const filterSensitiveLog: (obj: PlatformApplication) => any;
}

export interface ListPlatformApplicationsResponse {
    
    PlatformApplications?: PlatformApplication[];
    
    NextToken?: string;
}
export declare namespace ListPlatformApplicationsResponse {
    
    const filterSensitiveLog: (obj: ListPlatformApplicationsResponse) => any;
}
export interface ListSMSSandboxPhoneNumbersInput {
    
    NextToken?: string;
    
    MaxResults?: number;
}
export declare namespace ListSMSSandboxPhoneNumbersInput {
    
    const filterSensitiveLog: (obj: ListSMSSandboxPhoneNumbersInput) => any;
}
export declare enum SMSSandboxPhoneNumberVerificationStatus {
    Pending = "Pending",
    Verified = "Verified"
}

export interface SMSSandboxPhoneNumber {
    
    PhoneNumber?: string;
    
    Status?: SMSSandboxPhoneNumberVerificationStatus | string;
}
export declare namespace SMSSandboxPhoneNumber {
    
    const filterSensitiveLog: (obj: SMSSandboxPhoneNumber) => any;
}
export interface ListSMSSandboxPhoneNumbersResult {
    
    PhoneNumbers: SMSSandboxPhoneNumber[] | undefined;
    
    NextToken?: string;
}
export declare namespace ListSMSSandboxPhoneNumbersResult {
    
    const filterSensitiveLog: (obj: ListSMSSandboxPhoneNumbersResult) => any;
}

export interface ListSubscriptionsInput {
    
    NextToken?: string;
}
export declare namespace ListSubscriptionsInput {
    
    const filterSensitiveLog: (obj: ListSubscriptionsInput) => any;
}

export interface Subscription {
    
    SubscriptionArn?: string;
    
    Owner?: string;
    
    Protocol?: string;
    
    Endpoint?: string;
    
    TopicArn?: string;
}
export declare namespace Subscription {
    
    const filterSensitiveLog: (obj: Subscription) => any;
}

export interface ListSubscriptionsResponse {
    
    Subscriptions?: Subscription[];
    
    NextToken?: string;
}
export declare namespace ListSubscriptionsResponse {
    
    const filterSensitiveLog: (obj: ListSubscriptionsResponse) => any;
}

export interface ListSubscriptionsByTopicInput {
    
    TopicArn: string | undefined;
    
    NextToken?: string;
}
export declare namespace ListSubscriptionsByTopicInput {
    
    const filterSensitiveLog: (obj: ListSubscriptionsByTopicInput) => any;
}

export interface ListSubscriptionsByTopicResponse {
    
    Subscriptions?: Subscription[];
    
    NextToken?: string;
}
export declare namespace ListSubscriptionsByTopicResponse {
    
    const filterSensitiveLog: (obj: ListSubscriptionsByTopicResponse) => any;
}
export interface ListTagsForResourceRequest {
    
    ResourceArn: string | undefined;
}
export declare namespace ListTagsForResourceRequest {
    
    const filterSensitiveLog: (obj: ListTagsForResourceRequest) => any;
}
export interface ListTagsForResourceResponse {
    
    Tags?: Tag[];
}
export declare namespace ListTagsForResourceResponse {
    
    const filterSensitiveLog: (obj: ListTagsForResourceResponse) => any;
}
export interface ListTopicsInput {
    
    NextToken?: string;
}
export declare namespace ListTopicsInput {
    
    const filterSensitiveLog: (obj: ListTopicsInput) => any;
}

export interface Topic {
    
    TopicArn?: string;
}
export declare namespace Topic {
    
    const filterSensitiveLog: (obj: Topic) => any;
}

export interface ListTopicsResponse {
    
    Topics?: Topic[];
    
    NextToken?: string;
}
export declare namespace ListTopicsResponse {
    
    const filterSensitiveLog: (obj: ListTopicsResponse) => any;
}

export interface OptInPhoneNumberInput {
    
    phoneNumber: string | undefined;
}
export declare namespace OptInPhoneNumberInput {
    
    const filterSensitiveLog: (obj: OptInPhoneNumberInput) => any;
}

export interface OptInPhoneNumberResponse {
}
export declare namespace OptInPhoneNumberResponse {
    
    const filterSensitiveLog: (obj: OptInPhoneNumberResponse) => any;
}

export interface EndpointDisabledException extends __SmithyException, $MetadataBearer {
    name: "EndpointDisabledException";
    $fault: "client";
    
    message?: string;
}
export declare namespace EndpointDisabledException {
    
    const filterSensitiveLog: (obj: EndpointDisabledException) => any;
}

export interface InvalidParameterValueException extends __SmithyException, $MetadataBearer {
    name: "InvalidParameterValueException";
    $fault: "client";
    
    message?: string;
}
export declare namespace InvalidParameterValueException {
    
    const filterSensitiveLog: (obj: InvalidParameterValueException) => any;
}

export interface KMSAccessDeniedException extends __SmithyException, $MetadataBearer {
    name: "KMSAccessDeniedException";
    $fault: "client";
    message?: string;
}
export declare namespace KMSAccessDeniedException {
    
    const filterSensitiveLog: (obj: KMSAccessDeniedException) => any;
}

export interface KMSDisabledException extends __SmithyException, $MetadataBearer {
    name: "KMSDisabledException";
    $fault: "client";
    message?: string;
}
export declare namespace KMSDisabledException {
    
    const filterSensitiveLog: (obj: KMSDisabledException) => any;
}

export interface KMSInvalidStateException extends __SmithyException, $MetadataBearer {
    name: "KMSInvalidStateException";
    $fault: "client";
    message?: string;
}
export declare namespace KMSInvalidStateException {
    
    const filterSensitiveLog: (obj: KMSInvalidStateException) => any;
}

export interface KMSNotFoundException extends __SmithyException, $MetadataBearer {
    name: "KMSNotFoundException";
    $fault: "client";
    message?: string;
}
export declare namespace KMSNotFoundException {
    
    const filterSensitiveLog: (obj: KMSNotFoundException) => any;
}

export interface KMSOptInRequired extends __SmithyException, $MetadataBearer {
    name: "KMSOptInRequired";
    $fault: "client";
    message?: string;
}
export declare namespace KMSOptInRequired {
    
    const filterSensitiveLog: (obj: KMSOptInRequired) => any;
}

export interface KMSThrottlingException extends __SmithyException, $MetadataBearer {
    name: "KMSThrottlingException";
    $fault: "client";
    message?: string;
}
export declare namespace KMSThrottlingException {
    
    const filterSensitiveLog: (obj: KMSThrottlingException) => any;
}

export interface PlatformApplicationDisabledException extends __SmithyException, $MetadataBearer {
    name: "PlatformApplicationDisabledException";
    $fault: "client";
    
    message?: string;
}
export declare namespace PlatformApplicationDisabledException {
    
    const filterSensitiveLog: (obj: PlatformApplicationDisabledException) => any;
}

export interface MessageAttributeValue {
    
    DataType: string | undefined;
    
    StringValue?: string;
    
    BinaryValue?: Uint8Array;
}
export declare namespace MessageAttributeValue {
    
    const filterSensitiveLog: (obj: MessageAttributeValue) => any;
}

export interface PublishInput {
    
    TopicArn?: string;
    
    TargetArn?: string;
    
    PhoneNumber?: string;
    
    Message: string | undefined;
    
    Subject?: string;
    
    MessageStructure?: string;
    
    MessageAttributes?: {
        [key: string]: MessageAttributeValue;
    };
    
    MessageDeduplicationId?: string;
    
    MessageGroupId?: string;
}
export declare namespace PublishInput {
    
    const filterSensitiveLog: (obj: PublishInput) => any;
}

export interface PublishResponse {
    
    MessageId?: string;
    
    SequenceNumber?: string;
}
export declare namespace PublishResponse {
    
    const filterSensitiveLog: (obj: PublishResponse) => any;
}

export interface BatchEntryIdsNotDistinctException extends __SmithyException, $MetadataBearer {
    name: "BatchEntryIdsNotDistinctException";
    $fault: "client";
    message?: string;
}
export declare namespace BatchEntryIdsNotDistinctException {
    
    const filterSensitiveLog: (obj: BatchEntryIdsNotDistinctException) => any;
}

export interface BatchRequestTooLongException extends __SmithyException, $MetadataBearer {
    name: "BatchRequestTooLongException";
    $fault: "client";
    message?: string;
}
export declare namespace BatchRequestTooLongException {
    
    const filterSensitiveLog: (obj: BatchRequestTooLongException) => any;
}

export interface EmptyBatchRequestException extends __SmithyException, $MetadataBearer {
    name: "EmptyBatchRequestException";
    $fault: "client";
    message?: string;
}
export declare namespace EmptyBatchRequestException {
    
    const filterSensitiveLog: (obj: EmptyBatchRequestException) => any;
}

export interface InvalidBatchEntryIdException extends __SmithyException, $MetadataBearer {
    name: "InvalidBatchEntryIdException";
    $fault: "client";
    message?: string;
}
export declare namespace InvalidBatchEntryIdException {
    
    const filterSensitiveLog: (obj: InvalidBatchEntryIdException) => any;
}

export interface PublishBatchRequestEntry {
    
    Id: string | undefined;
    
    Message: string | undefined;
    
    Subject?: string;
    
    MessageStructure?: string;
    
    MessageAttributes?: {
        [key: string]: MessageAttributeValue;
    };
    
    MessageDeduplicationId?: string;
    
    MessageGroupId?: string;
}
export declare namespace PublishBatchRequestEntry {
    
    const filterSensitiveLog: (obj: PublishBatchRequestEntry) => any;
}
export interface PublishBatchInput {
    
    TopicArn: string | undefined;
    
    PublishBatchRequestEntries: PublishBatchRequestEntry[] | undefined;
}
export declare namespace PublishBatchInput {
    
    const filterSensitiveLog: (obj: PublishBatchInput) => any;
}

export interface BatchResultErrorEntry {
    
    Id: string | undefined;
    
    Code: string | undefined;
    
    Message?: string;
    
    SenderFault: boolean | undefined;
}
export declare namespace BatchResultErrorEntry {
    
    const filterSensitiveLog: (obj: BatchResultErrorEntry) => any;
}

export interface PublishBatchResultEntry {
    
    Id?: string;
    
    MessageId?: string;
    
    SequenceNumber?: string;
}
export declare namespace PublishBatchResultEntry {
    
    const filterSensitiveLog: (obj: PublishBatchResultEntry) => any;
}
export interface PublishBatchResponse {
    
    Successful?: PublishBatchResultEntry[];
    
    Failed?: BatchResultErrorEntry[];
}
export declare namespace PublishBatchResponse {
    
    const filterSensitiveLog: (obj: PublishBatchResponse) => any;
}

export interface TooManyEntriesInBatchRequestException extends __SmithyException, $MetadataBearer {
    name: "TooManyEntriesInBatchRequestException";
    $fault: "client";
    message?: string;
}
export declare namespace TooManyEntriesInBatchRequestException {
    
    const filterSensitiveLog: (obj: TooManyEntriesInBatchRequestException) => any;
}

export interface RemovePermissionInput {
    
    TopicArn: string | undefined;
    
    Label: string | undefined;
}
export declare namespace RemovePermissionInput {
    
    const filterSensitiveLog: (obj: RemovePermissionInput) => any;
}

export interface SetEndpointAttributesInput {
    
    EndpointArn: string | undefined;
    
    Attributes: {
        [key: string]: string;
    } | undefined;
}
export declare namespace SetEndpointAttributesInput {
    
    const filterSensitiveLog: (obj: SetEndpointAttributesInput) => any;
}

export interface SetPlatformApplicationAttributesInput {
    
    PlatformApplicationArn: string | undefined;
    
    Attributes: {
        [key: string]: string;
    } | undefined;
}
export declare namespace SetPlatformApplicationAttributesInput {
    
    const filterSensitiveLog: (obj: SetPlatformApplicationAttributesInput) => any;
}

export interface SetSMSAttributesInput {
    
    attributes: {
        [key: string]: string;
    } | undefined;
}
export declare namespace SetSMSAttributesInput {
    
    const filterSensitiveLog: (obj: SetSMSAttributesInput) => any;
}

export interface SetSMSAttributesResponse {
}
export declare namespace SetSMSAttributesResponse {
    
    const filterSensitiveLog: (obj: SetSMSAttributesResponse) => any;
}

export interface SetSubscriptionAttributesInput {
    
    SubscriptionArn: string | undefined;
    
    AttributeName: string | undefined;
    
    AttributeValue?: string;
}
export declare namespace SetSubscriptionAttributesInput {
    
    const filterSensitiveLog: (obj: SetSubscriptionAttributesInput) => any;
}

export interface SetTopicAttributesInput {
    
    TopicArn: string | undefined;
    
    AttributeName: string | undefined;
    
    AttributeValue?: string;
}
export declare namespace SetTopicAttributesInput {
    
    const filterSensitiveLog: (obj: SetTopicAttributesInput) => any;
}

export interface SubscribeInput {
    
    TopicArn: string | undefined;
    
    Protocol: string | undefined;
    
    Endpoint?: string;
    
    Attributes?: {
        [key: string]: string;
    };
    
    ReturnSubscriptionArn?: boolean;
}
export declare namespace SubscribeInput {
    
    const filterSensitiveLog: (obj: SubscribeInput) => any;
}

export interface SubscribeResponse {
    
    SubscriptionArn?: string;
}
export declare namespace SubscribeResponse {
    
    const filterSensitiveLog: (obj: SubscribeResponse) => any;
}
export interface TagResourceRequest {
    
    ResourceArn: string | undefined;
    
    Tags: Tag[] | undefined;
}
export declare namespace TagResourceRequest {
    
    const filterSensitiveLog: (obj: TagResourceRequest) => any;
}
export interface TagResourceResponse {
}
export declare namespace TagResourceResponse {
    
    const filterSensitiveLog: (obj: TagResourceResponse) => any;
}

export interface UnsubscribeInput {
    
    SubscriptionArn: string | undefined;
}
export declare namespace UnsubscribeInput {
    
    const filterSensitiveLog: (obj: UnsubscribeInput) => any;
}
export interface UntagResourceRequest {
    
    ResourceArn: string | undefined;
    
    TagKeys: string[] | undefined;
}
export declare namespace UntagResourceRequest {
    
    const filterSensitiveLog: (obj: UntagResourceRequest) => any;
}
export interface UntagResourceResponse {
}
export declare namespace UntagResourceResponse {
    
    const filterSensitiveLog: (obj: UntagResourceResponse) => any;
}

export interface VerificationException extends __SmithyException, $MetadataBearer {
    name: "VerificationException";
    $fault: "client";
    Message: string | undefined;
    
    Status: string | undefined;
}
export declare namespace VerificationException {
    
    const filterSensitiveLog: (obj: VerificationException) => any;
}
export interface VerifySMSSandboxPhoneNumberInput {
    
    PhoneNumber: string | undefined;
    
    OneTimePassword: string | undefined;
}
export declare namespace VerifySMSSandboxPhoneNumberInput {
    
    const filterSensitiveLog: (obj: VerifySMSSandboxPhoneNumberInput) => any;
}

export interface VerifySMSSandboxPhoneNumberResult {
}
export declare namespace VerifySMSSandboxPhoneNumberResult {
    
    const filterSensitiveLog: (obj: VerifySMSSandboxPhoneNumberResult) => any;
}
